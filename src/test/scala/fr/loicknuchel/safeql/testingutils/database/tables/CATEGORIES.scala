package fr.loicknuchel.safeql.testingutils.database.tables

import cats.data.NonEmptyList
import fr.loicknuchel.safeql.Table._
import fr.loicknuchel.safeql._
import fr.loicknuchel.safeql.testingutils.Entities._

/**
 * Class generated by fr.loicknuchel.safeql.gen.writer.ScalaWriter on 2020-11-08T08:23:47.530962038Z
 */
class CATEGORIES private(getAlias: Option[String] = Some("c")) extends Table.SqlTable("PUBLIC", "categories", getAlias) {
  type Self = CATEGORIES

  val ID: SqlFieldRaw[Category.Id, CATEGORIES] = SqlField(this, "id", "INT NOT NULL", JdbcType.Integer, nullable = false, 1)
  val NAME: SqlFieldRaw[String, CATEGORIES] = SqlField(this, "name", "VARCHAR(50) NOT NULL", JdbcType.VarChar, nullable = false, 2)

  override def getFields: List[SqlField[_, CATEGORIES]] = List(ID, NAME)

  override def getSorts: List[Sort] = List(Sort("name", "name", NonEmptyList.of(NAME.desc, ID.asc)))

  override def searchOn: List[SqlField[_, CATEGORIES]] = List(NAME)

  override def getFilters: List[Filter] = List()

  def alias(alias: String): CATEGORIES = new CATEGORIES(Some(alias))
}

private[database] object CATEGORIES {
  val table = new CATEGORIES() // table instance, should be accessed through `fr.loicknuchel.safeql.testingutils.database.Tables` object
}
