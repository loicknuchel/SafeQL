package fr.loicknuchel.safeql.testingutils.database.tables

import fr.loicknuchel.safeql.Table._
import fr.loicknuchel.safeql._
import fr.loicknuchel.safeql.testingutils.Entities._

/**
 * Hello
 *
 * Class generated by fr.loicknuchel.safeql.gen.writer.ScalaWriter
 */
class USERS private(getAlias: Option[String] = Some("u")) extends Table.SqlTable("PUBLIC", "users", getAlias) {
  type Self = USERS

  val ID: SqlField[User.Id, USERS] = SqlField(this, "id", "INT NOT NULL", JdbcType.Integer, nullable = false, 1)
  val NAME: SqlField[String, USERS] = SqlField(this, "name", "VARCHAR(50) NOT NULL", JdbcType.VarChar, nullable = false, 2)
  val EMAIL: SqlField[String, USERS] = SqlField(this, "email", "VARCHAR(50)", JdbcType.VarChar, nullable = true, 3)

  override def getFields: List[SqlField[_, USERS]] = List(ID, NAME, EMAIL)

  override def getSorts: List[Sort] = List()

  override def searchOn: List[SqlField[_, USERS]] = List(ID, NAME, EMAIL)

  override def getFilters: List[Filter] = List()

  def alias(alias: String): USERS = new USERS(Some(alias))
}

private[database] object USERS {
  val table = new USERS() // table instance, should be accessed through `fr.loicknuchel.safeql.testingutils.database.Tables` object
}
